name: CI

on:
  # main branch 
  push:
    branches: [ main ]

jobs:
  # ----------------------------------------------------------------- #
  # Build for Android
  # ----------------------------------------------------------------- #
  build_Android: #  job 이름 [job = step 정리]

    runs-on: ubuntu-latest # ubuntu  환경
    steps:
      # 체크아웃
      - name: Checks-out my repository
        uses: actions/checkout@v2

      # Flutter Install clone run
      - name: Install Flutter
        run: git clone https://github.com/flutter/flutter.git

      # PATH 
      - name: Add path
        run: echo "$(pwd)/flutter/bin" >> $GITHUB_PATH

      # 패키지 다운로드
      - name: Download Flutter packages
        run: flutter pub get

      # Secrets에서 key.jks 생성
      - name: Create key.jks
        run: echo -n ${{ secrets.ANDROID_KEY_JKS }} | base64 -d > android/key.jks # -n 

      # Secrets에서 service-account-key.json 생성
      - name: Create key.jks
        run: echo -n ${{ secrets.SERVICE_ACCOUNT_KEY_JSON }} | base64 -d > android/service-account-key.json

      # Secrets 에서  key.properties 생성
      # key.properties 암호화된 문자열 file name 을 넘겨준다
      - name: Create key.properties
      # > android/key.properties 로 덮어씌우고
      # >> android/key.properties 추가
        run:
          echo 'storeFile=key.jks' > android/key.properties
          echo 'serviceAccountFile=service-account-key.json' >> android/key.properties
          echo 'storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}' >> android/key.properties
          echo 'keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}' >> android/key.properties
          echo 'keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}' >> android/key.properties

      # App Bundle 생성
      - name: Building Android AppBundle
        run: flutter build appbundle --build-number ${GITHUB_RUN_NUMBER} # build-number 에는 run_number 넘겨준다
        # ToDo: version-number 와 build-number 외부파일을 참조

      # gradle-play-publisher 업로드
      # https://github.com/Triple-T/gradle-play-publisher 외부패키지를 활용
      - name: Upload to GooglePlayStore
        run: ./gradlew publishReleaseBundle
        working-directory: ./android
